;+
; NAME:
;   WRITE_ISEDFIT_PARAMFILE()
;
; PURPOSE:
;   Initialize the global parameter file for iSEDfit.
;
; INPUTS: 
;   filterlist - string array list of filters (K-correct compatible
;     .par files) [NFILT]
;   prefix - prefix to assign to output files generated by iSEDfit,
;     including the setup file (default 'isedfit') 
;   minz,maxz - minimum,maximum redshift to consider in all
;     calculations 
;   nzz - number of samplings in [MINZ,MAXZ] redshift grid
;
; OPTIONAL INPUTS: 
;   zlog - distribute redshifts logarithmically in the range
;     [MINZ,MAXZ]? [0=no, 1=yes] (default 0)
;   h100 - Hubble constant relative to 100 km/s/Mpc (default 0.7)
;   omega0 - matter density (default 0.3)
;   omegal - vacuum energy density (default 0.7)
;   igm - include IGM attenuation in all calculations? [0=no, 1=yes]
;     (default 1)
;   isedfit_dir - full path name to the input and output files (default ./) 
;
; KEYWORD PARAMETERS:
;   clobber - overwrite existing parameter file
; 
; OUTPUTS: 
;   This code writes a parameter file called PREFIX+'_paramfile.par'. 
; 
; COMMENTS:
;   IGM attenuation should only be necessary if the bluest filters
;   under consideration lie blueward of 1215 A at the highest
;   redshifts.  Note that some calculations are slower if IGM
;   attenuation is included.
;
; MODIFICATION HISTORY:
;   J. Moustakas, 2012 Sep 07, Siena 
;
; Copyright (C) 2012, John Moustakas
; 
; This program is free software; you can redistribute it and/or modify 
; it under the terms of the GNU General Public License as published by 
; the Free Software Foundation; either version 2 of the License, or
; (at your option) any later version. 
; 
; This program is distributed in the hope that it will be useful, but 
; WITHOUT ANY WARRANTY; without even the implied warranty of
; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
; General Public License for more details. 
;-

pro write_isedfit_paramfile, filterlist, prefix=prefix, minz=minz, maxz=maxz, $
  nzz=nzz, zlog=zlog, h100=h100, omega0=omega0, omegal=omegal, igm=igm, $
  isedfit_dir=isedfit_dir, clobber=clobber

    if n_elements(filterlist) eq 0 then begin
       doc_library, 'write_isedfit_paramfile'
       return
    endif

    if n_elements(prefix) eq 0 then begin
       splog, 'PREFIX must be specified'
       return
    endif

    if n_elements(minz) eq 0 or n_elements(maxz) eq 0 or $
      n_elements(nzz) eq 0 then begin
       splog, 'Redshift parameters MINZ, MAXZ, NZZ must be specified'
       return
    endif
    
    if n_elements(zlog) eq 0 then zlog = 0
    if n_elements(h100) eq 0 then h100 = 0.7
    if n_elements(omega0) eq 0 then omega0 = 0.3
    if n_elements(omegal) eq 0 then omegal = 0.7
    if n_elements(igm) eq 0 then igm = 1

    if nzz le 0 then message, 'NZZ must be positive'
    if im_double(minz) ge im_double(maxz) then $
      message, 'MINZ must be less than MAXZ!'
    
    paramfile = isedfit_dir+prefix+'_paramfile.par'
    if im_file_test(paramfile,clobber=clobber) then return
    splog, 'Writing '+paramfile

    openw, lun, paramfile, /get_lun
    printf, lun, '# iSEDfit parameter file initialized '+im_today()
    printf, lun, 'prefix               '+prefix
    printf, lun, 'h100                 '+strtrim(string(im_double(h100),format='(F12.4)'),2)
    printf, lun, 'omega0               '+strtrim(string(im_double(omega0),format='(F12.4)'),2)
    printf, lun, 'omegal               '+strtrim(string(im_double(omegal),format='(F12.4)'),2)
    printf, lun, 'igm                  '+string(igm,format='(I0)')+' # [0=no, 1=yes]'
    printf, lun, 'minz                 '+strtrim(string(im_double(minz),format='(F12.4)'),2)
    printf, lun, 'maxz                 '+strtrim(string(im_double(maxz),format='(F12.4)'),2)
    printf, lun, 'nzz                  '+string(nzz,format='(I0)')
    printf, lun, 'zlog                 '+string(zlog,format='(I0)')+' # [0=no, 1=yes]'
    printf, lun, 'filterlist           '+strjoin(filterlist,',')
    free_lun, lun 

return
end
