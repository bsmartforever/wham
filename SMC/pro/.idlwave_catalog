;;
;; IDLWAVE catalog for library WhamLib
;; Automatically Generated -- do not edit.
;; Created by idlwave_catalog on Thu Apr  1 14:22:30 2004
;;
(setq idlwave-library-catalog-libname "WhamLib")
(setq idlwave-library-catalog-routines
 '(("readsmap" pro nil (lib "readsmap.pro" nil "WhamLib") "%s, basename, map" (nil ("novlsr")))
   ("readspe" pro nil (lib "readspe.pro" nil "WhamLib") "%s, fn, v, d, s, n" (nil ("npix")))
   ("intersect" fun nil (lib "intersect.pro" nil "WhamLib") "Result = %s(a, b, nmatch)" (nil))
   ("whamgauss" fun nil (lib "whamgauss.pro" nil "WhamLib") "Result = %s(vel, params, nbk)" (nil ("ip")))
   ("readobs" fun nil (lib "readobs.pro" nil "WhamLib") "Result = %s(name, date)" (nil ("archive") ("nii") ("sii")))
   ("readfspe" pro nil (lib "readfspe.pro" nil "WhamLib") "%s, fn, v, d, s, header" (nil ("ext") ("pheader")))
   ("blobmap" pro nil (lib "blobmap.pro" nil "WhamLib") "%s, map, vcenter, vwidth, min, max" (nil ("beamsonly") ("he") ("log") ("multi") ("nolabels") ("title") ("zmax")))
   ("smoothmap" pro nil (lib "smoothmap.pro" nil "WhamLib") "%s, map, vcenter, vwidth, min, max, image, smimage" (nil ("bound") ("log") ("multi") ("nodisp") ("nohe") ("scale") ("title") ("useimage") ("xm") ("ym") ("zmax") ("zmin")))
   ("curspect" pro nil (lib "curspect.pro" nil "WhamLib") "%s, map, map2" (nil ("hi") ("image") ("intrange") ("radec")))
   ("gridspacing" pro nil (lib "gridspacing.pro" nil "WhamLib") "%s, cimin, cimax, gmin, gmax, del" (nil ("adjust")))
   ("plotst" pro nil (lib "plotst.pro" nil "WhamLib") "%s, fname" (nil))
   ("mapslice" fun nil (lib "mapslice.pro" nil "WhamLib") "Result = %s(map, minlon, maxlon, minlat, maxlat)" (nil ("count") ("index") ("radec")))
   ("boundary" fun nil (lib "boundary.pro" nil "WhamLib") "Result = %s(map, value)" (nil))
   ("map_image_missing" fun nil (lib "map_image.pro" nil "WhamLib") "Result = %s(image_orig, max_value, min_value)" (nil))
   ("map_image" fun nil (lib "map_image.pro" nil "WhamLib") "Result = %s(Image_Orig, Startx, Starty, xsize, ysize)" (nil ("BILINEAR") ("COMPRESS") ("LATMAX") ("LATMIN") ("LONMAX") ("LONMIN") ("MAX_VALUE") ("MIN_VALUE") ("MISSING") ("SCALE") ("WHOLE_MAP")))
   ("spectnear" fun nil (lib "spectnear.pro" nil "WhamLib") "Result = %s(map, glon, glat, radius, cnt)" (nil ("dist")))
   ("plotend" pro nil (lib "plotend.pro" nil "WhamLib") "%s" (nil))
   ("writespe" pro nil (lib "writespe.pro" nil "WhamLib") "%s, filename, v, spect, sig, ndp" (nil))
   ("oldnewv" pro nil (lib "oldnewv.pro" nil "WhamLib") "%s, oldv, newv" (nil))
   ("convertv" fun nil (lib "convertv.pro" nil "WhamLib") "Result = %s(oldv)" (nil))
   ("geofitplot" pro nil (lib "geofitplot.pro" nil "WhamLib") "%s, block" (nil ("noline") ("printer")))
   ("readblock" pro nil (lib "readblock.pro" nil "WhamLib") "%s, block, map, obslines" (nil ("altspe") ("extended") ("ftsext") ("ha") ("nii") ("quiet") ("raw") ("sii")))
   ("parsedate" fun nil (lib "parsedate.pro" nil "WhamLib") "Result = %s(date)" (nil ("fitsformat")))
   ("hdtoaa" pro nil (lib "hdtoaa.pro" nil "WhamLib") "%s, hain, decin, olatin, az, alt" (nil ("degrees")))
   ("reduceto180" fun nil (lib "reduceto180.pro" nil "WhamLib") "Result = %s(a)" (nil))
   ("reduceto360" fun nil (lib "reduceto360.pro" nil "WhamLib") "Result = %s(a)" (nil))
   ("extractblock" fun nil (lib "extractblock.pro" nil "WhamLib") "Result = %s(map, block)" (nil))
   ("intspect" fun nil (lib "intspect.pro" nil "WhamLib") "Result = %s(pointing, vmin, vmax)" (nil ("hi")))
   ("intmap" fun nil (lib "intmap.pro" nil "WhamLib") "Result = %s(map)" (nil ("badpoints") ("orig") ("vmax") ("vmin")))
   ("fixinten" pro nil (lib "fixinten.pro" nil "WhamLib") "%s, map" (nil))
   ("bdist" pro nil (lib "bdist.pro" nil "WhamLib") "%s, map, z, dm, da, de" (nil ("quiet") ("step") ("vrange")))
   ("exthi" fun nil (lib "exthi.pro" nil "WhamLib") "Result = %s(lmin, lmax, bmin, bmax)" (nil ("datadir") ("dv") ("vmax") ("vmin") ("wham")))
   ("isclose" fun nil (lib "findstars.pro" nil "WhamLib") "Result = %s(map, glon, glat, radius, ccnt)" (nil))
   ("findstars" pro nil (lib "findstars.pro" nil "WhamLib") "%s, map, stars, closemap, closestars, nclose, dist" (nil ("window")))
   ("mapsliceidx" fun nil (lib "mapsliceidx.pro" nil "WhamLib") "Result = %s(map, minlon, maxlon, minlat, maxlat)" (nil ("count") ("radec")))
   ("plotpointing" pro nil (lib "plotpointing.pro" nil "WhamLib") "%s, pointing" (nil ("_extra") ("font") ("hi") ("intlabel") ("loclabel") ("rey") ("scale") ("title")))
   ("replacepointings" pro nil (lib "replacepointings.pro" nil "WhamLib") "%s, map, new" (nil))
   ("ext" pro nil (lib "ext.pro" nil "WhamLib") "%s, par, xpar" (nil ("r") ("red") ("v")))
   ("intmap_fast" fun nil (lib "intmap_fast.pro" nil "WhamLib") "Result = %s(map)" (nil ("badpoints") ("orig") ("vmax") ("vmin")))
   ("whammap" pro nil (lib "whammap_greg.pro" nil "WhamLib") "%s, map, vcenter, vwidth, image, smimage" (nil ("_extra") ("backwards") ("beamradius") ("beamsonly") ("cbottom") ("fill") ("font") ("full") ("labels") ("latcenter") ("latlabadj") ("limits") ("linear") ("log") ("loncenter") ("lonlabadj") ("lonlabtop") ("maxd") ("mind") ("multi") ("noborder") ("nodata") ("nogrid") ("nolatborder") ("nolonborder") ("nozero") ("radec") ("replace") ("scale") ("smgrid") ("smooth") ("title") ("useimage") ("zmax") ("zmin")))
   ("interrmap" fun nil (lib "interrmap.pro" nil "WhamLib") "Result = %s(map)" (nil ("vmax") ("vmin")))
   ("Int_Tabulated_Var" fun nil (lib "int_tabulated_var.pro" nil "WhamLib") "Result = %s(X, F)" (nil ("Double") ("Sort")))
   ("bdistrat" pro nil (lib "bdistrat.pro" nil "WhamLib") "%s, map, map2, z, dm, da, de" (nil ("quiet") ("step") ("vrange")))
   ("MeanAbsDev" fun nil (lib "meanabsdev.pro" nil "WhamLib") "Result = %s(X)" (nil ("Double") ("Median") ("NaN")))
   ("fixbaddies" pro nil (lib "fixbaddies.pro" nil "WhamLib") "%s, map, ii, badpoints" (nil ("radius")))
   ("extco" fun nil (lib "extco.pro" nil "WhamLib") "Result = %s(lmin, lmax, bmin, bmax)" (nil ("datadir") ("dv") ("silent") ("vmax") ("vmin") ("wham")))
   ("get_pname" fun nil (lib "sparith_old.pro" nil "WhamLib") "Result = %s(pointing)" (nil))
   ("get_shift" fun nil (lib "sparith_old.pro" nil "WhamLib") "Result = %s(mapa, mapb, arange, brange, length)" (nil))
   ("sparith" fun nil (lib "sparith_old.pro" nil "WhamLib") "Result = %s(mapa, mapb)" (nil ("add") ("average") ("divide") ("exclude") ("multiply") ("subtract") ("total")))
   ("fix_trans" fun nil (lib "fix_trans.pro" nil "WhamLib") "Result = %s(map, t0_new)" (nil))
   ("krange" fun nil (lib "kplot.pro" nil "WhamLib") "Result = %s(karray)" (nil ("kplot_type")))
   ("get_new_krange" pro nil (lib "kplot.pro" nil "WhamLib") "%s, in_krange, in_karray" (nil ("kplot_type")))
   ("set_symbol" pro nil (lib "kplot.pro" nil "WhamLib") "%s, psym, tpsym" (nil))
   ("kplot" pro nil (lib "kplot.pro" nil "WhamLib") "%s, x, y" (nil ("background") ("charsize") ("color") ("error_bars") ("kplot_type") ("linestyle_in") ("nodata") ("noerase") ("position") ("psym") ("symsize") ("thick") ("title") ("xerror") ("xrange") ("xstyle") ("xtickname") ("xticks") ("xtitle") ("yerror") ("ymargin") ("yrange") ("ystyle") ("ytickname") ("yticks") ("ytitle")))
   ("koplot" pro nil (lib "kplot.pro" nil "WhamLib") "%s, x, y" (nil ("color") ("linestyle") ("psym") ("symsize") ("thick") ("xerror") ("yerror")))
   ("klegend" pro nil (lib "kplot.pro" nil "WhamLib") "%s, pos, ktype, klabel" (nil ("charsize") ("color") ("kplot_type") ("line_color") ("symsize") ("thick") ("twocol")))
   ("oploterr" pro nil (lib "kplot.pro" nil "WhamLib") "%s, x, y, xerr, yerr" (nil ("_EXTRA") ("ANONYMOUS_") ("ERRCOLOR") ("ERRSTYLE") ("ERRTHICK") ("HATLENGTH") ("NOCLIP") ("NOHAT") ("NSKIP") ("THICK")))
   ("fixbaddies_fast" pro nil (lib "fixbaddies_fast.pro" nil "WhamLib") "%s, map, ii, badpoints" (nil ("radius")))
   ("Vel_Stretch" fun nil (lib "vel_stretch.pro" nil "WhamLib") "Result = %s(Lambda)" (nil))
   ("mkblockavg" pro nil (lib "mkblockavg.pro" nil "WhamLib") "%s, dir" (nil ("save")))
   ("writefspe" pro nil (lib "writefspe.pro" nil "WhamLib") "%s, filename, ext, v, d, s" (nil ("extrakeys")))
   ("mkavgspec" pro nil (lib "mkavgspec.pro" nil "WhamLib") "%s, name, dir" (nil ("ext")))
   ("readblocklist" fun nil (lib "readblocklist.pro" nil "WhamLib") "Result = %s(list)" (nil ("ext")))
   ("readblock" pro nil (lib "readblock_100.pro" nil "WhamLib") "%s, block, map, obslines" (nil ("altspe") ("extended") ("ftsext") ("ha") ("nii") ("quiet") ("raw") ("sii")))
   ("color" fun nil (lib "color.pro" nil "WhamLib") "Result = %s(incolor)" (nil))
   ("plotspectrum" pro nil (lib "plotspectrum.pro" nil "WhamLib") "%s, vel, data" (nil ("_extra") ("errors") ("hi") ("rey")))
   ("writepointing" pro nil (lib "writepointing.pro" nil "WhamLib") "%s, fn, ext, pointing" (nil ("extrakeys")))
   ("whammap" pro nil (lib "whammap.pro" nil "WhamLib") "%s, map, vcenter, vwidth, image, smimage" (nil ("_extra") ("background") ("backwards") ("beamradius") ("beamsonly") ("bimage") ("cbottom") ("fill") ("font") ("full") ("labels") ("latcenter") ("latlabadj") ("limits") ("linear") ("log") ("loncenter") ("lonlabadj") ("lonlabtop") ("maxd") ("mind") ("missing") ("multi") ("noborder") ("nodata") ("nogrid") ("nolatborder") ("nolonborder") ("nozero") ("radec") ("replace") ("scale") ("smgrid") ("smooth") ("title") ("useimage") ("zmax") ("zmin")))
   ("width_decomp" pro nil (lib "width_decomp.pro" nil "WhamLib") "%s" (nil ("S_obs") ("W_obs") ("xrange") ("yrange")))
   ("check_vc" pro nil (lib "check_vc.pro" nil "WhamLib") "%s, dir" (nil))
   ("get_pname" fun nil (lib "sparith.pro" nil "WhamLib") "Result = %s(pointing)" (nil))
   ("get_shift" fun nil (lib "sparith.pro" nil "WhamLib") "Result = %s(mapa, mapb, arange, brange, length)" (nil))
   ("sparith" fun nil (lib "sparith.pro" nil "WhamLib") "Result = %s(mapa, mapb)" (nil ("add") ("average") ("divide") ("exclude") ("multiply") ("subtract") ("total")))
   ("COR_SPEC" pro nil (lib "Cor_Spec.pro" nil "WhamLib") "%s" (nil ("atm_t_0") ("degrad") ("no_ff") ("save")))
   ("N_NON_LIN" fun nil (lib "tune.pro" nil "WhamLib") "Result = %s(P)" (nil))
   ("N_WAVE" fun nil (lib "tune.pro" nil "WhamLib") "Result = %s(l)" (nil))
   ("OPT_INDEX" fun nil (lib "tune.pro" nil "WhamLib") "Result = %s(l, P)" (nil ("Space")))
   ("PREDICT_TUNE" fun nil (lib "tune.pro" nil "WhamLib") "Result = %s(L_ref, P_ref, L_targ)" (nil ("air") ("Space") ("verbose")))
   ("FIND_FSR" pro nil (lib "tune.pro" nil "WhamLib") "%s" (nil))
   ("VAC_AIR" pro nil (lib "tune.pro" nil "WhamLib") "%s" (nil))
   ("PREDICT_VEL_CALIB" fun nil (lib "tune.pro" nil "WhamLib") "Result = %s(P)" (nil ("blue_nii") ("ha") ("hb") ("hei") ("nii") ("oiii") ("sii") ("silent")))
   ("VLSR" fun nil (lib "vlsr.pro" nil "WhamLib") "Result = %s" (nil ("dec") ("jd") ("lat") ("lon") ("ra") ("utc") ("utdate") ("verbose")))
   ("FANCY_TUNE" pro nil (lib "fancy_tune.pro" nil "WhamLib") "%s" (nil ("Filter") ("Output_Tune")))
   ("FANCY_TUNE_EVENT" pro nil (lib "fancy_tune.pro" nil "WhamLib") "%s, EVENT" (nil))
   ("PLOT_IT" pro nil (lib "fancy_tune.pro" nil "WhamLib") "%s" (nil))
   ("WIDGET_UPDATE" pro nil (lib "fancy_tune.pro" nil "WhamLib") "%s" (nil))
   ("fillmapgreg" pro nil (lib "fillmapgreg.pro" nil "WhamLib") "%s, lon, lat, image, missing" (nil))
   ("fillmap" pro nil (lib "fillmap_old.pro" nil "WhamLib") "%s, lon, lat, image, missing" (nil ("decrange")))
   ("fillmap" pro nil (lib "fillmap.pro" nil "WhamLib") "%s, lon, lat, image, missing" (nil ("decrange")))
   ("Greg_SpArith" fun nil (lib "greg_sparith.pro" nil "WhamLib") "Result = %s(Map_A, Map_B)" (nil ("add") ("average") ("divide") ("multiply") ("subtract") ("total") ("wham")))
   ("COLORBAR" pro nil (lib "colorbar.pro" nil "WhamLib") "%s" (nil ("_EXTRA") ("BOTTOM") ("CHARSIZE") ("COLOR") ("DIVISIONS") ("FONT") ("FORMAT") ("MAXRANGE") ("MINOR") ("MINRANGE") ("NCOLORS") ("POSITION") ("RANGE") ("REVERSE") ("RIGHT") ("TICKLEN") ("TITLE") ("TOP") ("VERTICAL")))))
